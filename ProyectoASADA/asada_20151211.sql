-- --------------------------------------------------------
-- Host:                         127.0.0.1
-- Versión del servidor:         10.0.21-MariaDB - mariadb.org binary distribution
-- SO del servidor:              Win32
-- HeidiSQL Versión:             9.3.0.4984
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8mb4 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

-- Volcando estructura de base de datos para asada
CREATE DATABASE IF NOT EXISTS `asada` /*!40100 DEFAULT CHARACTER SET utf8 */;
USE `asada`;


-- Volcando estructura para tabla asada.abonados
CREATE TABLE IF NOT EXISTS `abonados` (
  `ID_ABONADO` varchar(20) NOT NULL,
  `NOMBRE` varchar(45) DEFAULT NULL,
  `APELLIDO1` varchar(45) DEFAULT NULL,
  `APELLIDO2` varchar(45) DEFAULT NULL,
  `MOVIL` varchar(16) DEFAULT NULL,
  `TELEFONO` varchar(16) DEFAULT NULL,
  `EMAIL` varchar(65) DEFAULT NULL,
  `FECHA_REGISTRO` date DEFAULT NULL,
  `DIRECCION` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`ID_ABONADO`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Volcando datos para la tabla asada.abonados: ~4 rows (aproximadamente)
DELETE FROM `abonados`;
/*!40000 ALTER TABLE `abonados` DISABLE KEYS */;
INSERT INTO `abonados` (`ID_ABONADO`, `NOMBRE`, `APELLIDO1`, `APELLIDO2`, `MOVIL`, `TELEFONO`, `EMAIL`, `FECHA_REGISTRO`, `DIRECCION`) VALUES
	('02-0581-0652', 'RANDALL', 'GARCÍA', 'CORTEZ', '6066-2105', '2470-1345', 'rgarcia@ciagrolasbrisas.com', '2015-08-24', 'FINCA SAN JUAN SANTA CLARA'),
	('02-0691-0726', 'GRECELA', 'UGARTE', 'LEZAMA', '6506-9550', '2470-1212', 'grece828@gmail.com,greceugarte@hotmail.com', '2015-12-08', 'LOS ANGELES DE MORENO CAÑAS'),
	('04-7576-7693', 'MARIA JOSÉ', 'PEREZ', 'ARAYA', '6021-1575', '2470-2345', 'mjoseperez@yahoo.es', '2015-11-17', 'FINCA SAN JUAN, SANTA CLARA'),
	('05-0361-0245', 'RICHARD', 'DURAN', 'PRADO', '8560-4456', '2470-5687', 'rduranprado@outlook.com', '2015-11-10', 'MORENO CAÑAS'),
	('05-0361-0263', 'MICHAEL', 'BUSTOS', 'LÓPEZ', '8560-6628', '    -', 'mfallas987@gmail.com', '2015-08-24', 'COMPAÑIA LOGITECH...XD');
/*!40000 ALTER TABLE `abonados` ENABLE KEYS */;


-- Volcando estructura para tabla asada.abonos_prevista
CREATE TABLE IF NOT EXISTS `abonos_prevista` (
  `ID_ABONO` varchar(4) NOT NULL,
  `IDPREVISTAS` varchar(4) NOT NULL,
  `FECHA` date NOT NULL,
  `SALDO_ANTERIOR` decimal(10,2) NOT NULL,
  `SALDO_ACTUAL` decimal(10,2) NOT NULL,
  `ABONO` decimal(10,2) NOT NULL,
  PRIMARY KEY (`ID_ABONO`),
  KEY `FK_ID_PREVIST` (`IDPREVISTAS`),
  CONSTRAINT `FK_ID_PREVIST` FOREIGN KEY (`IDPREVISTAS`) REFERENCES `prevista` (`ID_PREVISTA`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Volcando datos para la tabla asada.abonos_prevista: ~0 rows (aproximadamente)
DELETE FROM `abonos_prevista`;
/*!40000 ALTER TABLE `abonos_prevista` DISABLE KEYS */;
/*!40000 ALTER TABLE `abonos_prevista` ENABLE KEYS */;


-- Volcando estructura para tabla asada.aforos
CREATE TABLE IF NOT EXISTS `aforos` (
  `ID_AFORO` varchar(3) NOT NULL,
  `HUBICACION` varchar(255) DEFAULT NULL,
  `METROSXSEG` int(11) DEFAULT NULL,
  PRIMARY KEY (`ID_AFORO`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Volcando datos para la tabla asada.aforos: ~0 rows (aproximadamente)
DELETE FROM `aforos`;
/*!40000 ALTER TABLE `aforos` DISABLE KEYS */;
/*!40000 ALTER TABLE `aforos` ENABLE KEYS */;


-- Volcando estructura para tabla asada.bitacora
CREATE TABLE IF NOT EXISTS `bitacora` (
  `ID_BITACORA` int(11) NOT NULL,
  `DETALLE` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Volcando datos para la tabla asada.bitacora: ~0 rows (aproximadamente)
DELETE FROM `bitacora`;
/*!40000 ALTER TABLE `bitacora` DISABLE KEYS */;
/*!40000 ALTER TABLE `bitacora` ENABLE KEYS */;


-- Volcando estructura para tabla asada.cloracion_agua
CREATE TABLE IF NOT EXISTS `cloracion_agua` (
  `ID_APLICACION` varchar(10) NOT NULL,
  `FECHA` date NOT NULL,
  `HORA_APLICACION` time NOT NULL,
  `RESPONSABLE` varchar(60) NOT NULL,
  `TEMPERATURA_AGUA` varchar(4) NOT NULL,
  `CANTIDAD_CLORO` decimal(10,2) NOT NULL,
  PRIMARY KEY (`ID_APLICACION`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Preguntar a Rodolfo si tienen mas de una pila a la cual se le aplica, y si identifica a que pila le aplica el cloro';

-- Volcando datos para la tabla asada.cloracion_agua: ~0 rows (aproximadamente)
DELETE FROM `cloracion_agua`;
/*!40000 ALTER TABLE `cloracion_agua` DISABLE KEYS */;
/*!40000 ALTER TABLE `cloracion_agua` ENABLE KEYS */;


-- Volcando estructura para tabla asada.cobros
CREATE TABLE IF NOT EXISTS `cobros` (
  `ID_COBROS` varchar(20) NOT NULL,
  `ID_PREVISTA` varchar(4) NOT NULL,
  `ID_LECTURAS` varchar(10) NOT NULL,
  `ID_TARIFAS` varchar(2) NOT NULL,
  `FECHA_GENERACION` date NOT NULL,
  `PERIODO` varchar(45) NOT NULL,
  `TIPO_GENERACION` tinyint(4) NOT NULL,
  `METROS_CUBICOS` decimal(10,2) NOT NULL,
  `MONTO_FIJO` decimal(10,2) NOT NULL,
  `TARIFA_HIDRANTES` decimal(10,2) NOT NULL,
  `FECHA_PAGO` date DEFAULT NULL,
  `RECIBO_PAGO` varchar(45) DEFAULT NULL,
  `TOTAL` decimal(10,2) NOT NULL,
  PRIMARY KEY (`ID_COBROS`),
  UNIQUE KEY `ID_COBROS` (`ID_COBROS`),
  KEY `FK_ID_PREVISTA` (`ID_PREVISTA`),
  KEY `FK_ID_LECTURAS` (`ID_LECTURAS`),
  KEY `FK_ID_TARIFA` (`ID_TARIFAS`),
  CONSTRAINT `FK_ID_LECTURAS` FOREIGN KEY (`ID_LECTURAS`) REFERENCES `lecturas` (`ID_LECTURAS`) ON UPDATE CASCADE,
  CONSTRAINT `FK_ID_PREVISTA` FOREIGN KEY (`ID_PREVISTA`) REFERENCES `previstas` (`ID_PREVISTA`) ON UPDATE CASCADE,
  CONSTRAINT `FK_ID_TARIFA` FOREIGN KEY (`ID_TARIFAS`) REFERENCES `tarifas` (`ID_TARIFAS`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Volcando datos para la tabla asada.cobros: ~0 rows (aproximadamente)
DELETE FROM `cobros`;
/*!40000 ALTER TABLE `cobros` DISABLE KEYS */;
/*!40000 ALTER TABLE `cobros` ENABLE KEYS */;


-- Volcando estructura para tabla asada.compras
CREATE TABLE IF NOT EXISTS `compras` (
  `ID_COMPRA` varchar(5) NOT NULL,
  `FECHA_COMPRA` date NOT NULL,
  `NUM_FACTURA` varchar(15) NOT NULL,
  `COMERCIO` varchar(60) DEFAULT NULL,
  `CANTIDAD` int(11) DEFAULT NULL,
  `PRODUCTO` varchar(100) NOT NULL,
  `PRECIO` decimal(10,2) NOT NULL,
  `TOTAL` decimal(10,2) NOT NULL,
  `IVA` decimal(10,2) DEFAULT NULL,
  PRIMARY KEY (`ID_COMPRA`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Volcando datos para la tabla asada.compras: ~0 rows (aproximadamente)
DELETE FROM `compras`;
/*!40000 ALTER TABLE `compras` DISABLE KEYS */;
/*!40000 ALTER TABLE `compras` ENABLE KEYS */;


-- Volcando estructura para tabla asada.consecutivos
CREATE TABLE IF NOT EXISTS `consecutivos` (
  `CODE` int(2) NOT NULL,
  `ABONADO` int(11) NOT NULL,
  `PREVISTA` int(11) NOT NULL,
  PRIMARY KEY (`CODE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Volcando datos para la tabla asada.consecutivos: ~1 rows (aproximadamente)
DELETE FROM `consecutivos`;
/*!40000 ALTER TABLE `consecutivos` DISABLE KEYS */;
INSERT INTO `consecutivos` (`CODE`, `ABONADO`, `PREVISTA`) VALUES
	(1, 13, 0);
/*!40000 ALTER TABLE `consecutivos` ENABLE KEYS */;


-- Volcando estructura para tabla asada.contacto_abn
CREATE TABLE IF NOT EXISTS `contacto_abn` (
  `ID_CONTACTOAB` varchar(4) NOT NULL,
  `ID_ABONADOS` varchar(20) NOT NULL,
  `TELEFONO` varchar(15) DEFAULT NULL,
  `EMAIL` varchar(70) DEFAULT NULL,
  PRIMARY KEY (`ID_CONTACTOAB`),
  KEY `FK_ID_ABONADOS` (`ID_ABONADOS`),
  CONSTRAINT `FK_ID_ABONADOS` FOREIGN KEY (`ID_ABONADOS`) REFERENCES `abonados` (`ID_ABONADO`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Volcando datos para la tabla asada.contacto_abn: ~0 rows (aproximadamente)
DELETE FROM `contacto_abn`;
/*!40000 ALTER TABLE `contacto_abn` DISABLE KEYS */;
/*!40000 ALTER TABLE `contacto_abn` ENABLE KEYS */;


-- Volcando estructura para tabla asada.contacto_emp
CREATE TABLE IF NOT EXISTS `contacto_emp` (
  `ID_CONTACTO` varchar(4) NOT NULL,
  `ID_EMPLEADO` varchar(20) NOT NULL,
  `TELEFONO` varchar(15) DEFAULT NULL,
  `EMAIL` varchar(70) DEFAULT NULL,
  PRIMARY KEY (`ID_CONTACTO`),
  KEY `FK_ID_EMPLEADOS` (`ID_EMPLEADO`),
  CONSTRAINT `FK_ID_EMPLEADOS` FOREIGN KEY (`ID_EMPLEADO`) REFERENCES `empleados` (`ID_EMPLEADO`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Valorar si es necesario diferenciar entre telefono de casa y celular';

-- Volcando datos para la tabla asada.contacto_emp: ~0 rows (aproximadamente)
DELETE FROM `contacto_emp`;
/*!40000 ALTER TABLE `contacto_emp` DISABLE KEYS */;
/*!40000 ALTER TABLE `contacto_emp` ENABLE KEYS */;


-- Volcando estructura para tabla asada.empleados
CREATE TABLE IF NOT EXISTS `empleados` (
  `ID_EMPLEADO` varchar(20) NOT NULL,
  `ID_PROFESION` varchar(2) NOT NULL,
  `NOMBRE` varchar(45) NOT NULL,
  `APELLIDO1` varchar(45) NOT NULL,
  `APELLIDO2` varchar(45) NOT NULL,
  `FECHA_NACIMIENTO` date NOT NULL,
  `ESTADO_CIVIL` varchar(15) NOT NULL,
  `TELEFONO` varchar(16) NOT NULL,
  `DIRECCION` varchar(255) NOT NULL,
  PRIMARY KEY (`ID_EMPLEADO`),
  UNIQUE KEY `ID_EMPLEADO` (`ID_EMPLEADO`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Volcando datos para la tabla asada.empleados: ~0 rows (aproximadamente)
DELETE FROM `empleados`;
/*!40000 ALTER TABLE `empleados` DISABLE KEYS */;
INSERT INTO `empleados` (`ID_EMPLEADO`, `ID_PROFESION`, `NOMBRE`, `APELLIDO1`, `APELLIDO2`, `FECHA_NACIMIENTO`, `ESTADO_CIVIL`, `TELEFONO`, `DIRECCION`) VALUES
	('78-9900-0089', '33', 'FEDE', 'UGARTE', 'LEZAMA', '1992-06-10', 'SOLTERO', '24701589', 'LOS ANGELES');
/*!40000 ALTER TABLE `empleados` ENABLE KEYS */;


-- Volcando estructura para tabla asada.empresa
CREATE TABLE IF NOT EXISTS `empresa` (
  `ID_EMPRESA` int(11) NOT NULL,
  `DESCRIPCION` varchar(255) DEFAULT NULL,
  `DIRECCION` varchar(255) DEFAULT NULL,
  `TELEFONO` varchar(16) DEFAULT NULL,
  `CED_JURIDICA` varchar(16) DEFAULT NULL,
  `EMAIL` varchar(15) DEFAULT NULL,
  `WEB` varchar(15) DEFAULT NULL,
  `LOGO` blob,
  `OBSERVACIONES` varchar(255) DEFAULT NULL,
  `CONSEC_PREVISTAS` int(10) DEFAULT NULL,
  `CONSEC_LECTURAS` int(10) DEFAULT NULL,
  PRIMARY KEY (`ID_EMPRESA`),
  UNIQUE KEY `ID_EMPRESA` (`ID_EMPRESA`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Volcando datos para la tabla asada.empresa: ~0 rows (aproximadamente)
DELETE FROM `empresa`;
/*!40000 ALTER TABLE `empresa` DISABLE KEYS */;
INSERT INTO `empresa` (`ID_EMPRESA`, `DESCRIPCION`, `DIRECCION`, `TELEFONO`, `CED_JURIDICA`, `EMAIL`, `WEB`, `LOGO`, `OBSERVACIONES`, `CONSEC_PREVISTAS`, `CONSEC_LECTURAS`) VALUES
	(1, 'ACUEDUCTO JESUS MARIA', 'MORENO CAÑAS', '(506) 7777-77-77', NULL, '', NULL, _binary 
/*!40000 ALTER TABLE `empresa` ENABLE KEYS */;


-- Volcando estructura para tabla asada.formatos_cedulas
CREATE TABLE IF NOT EXISTS `formatos_cedulas` (
  `IDFORMATO` varchar(100) DEFAULT NULL,
  `FORMATO` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Volcando datos para la tabla asada.formatos_cedulas: ~2 rows (aproximadamente)
DELETE FROM `formatos_cedulas`;
/*!40000 ALTER TABLE `formatos_cedulas` DISABLE KEYS */;
INSERT INTO `formatos_cedulas` (`IDFORMATO`, `FORMATO`) VALUES
	('NACIONAL', '99-9999-9999'),
	('EXTRANJERO', '9999-99-999-9-9-9-9');
/*!40000 ALTER TABLE `formatos_cedulas` ENABLE KEYS */;


-- Volcando estructura para tabla asada.gastos
CREATE TABLE IF NOT EXISTS `gastos` (
  `ID_GASTO` varchar(10) NOT NULL,
  `TIPO_GASTO` varchar(10) NOT NULL COMMENT 'En este caso alquiler, fletes y viaticos, etc.',
  `FECHA_GASTO` date NOT NULL,
  `BENEFICIARIO` varchar(70) NOT NULL COMMENT 'Persona a la que se le paga el gasto y que puede ser un empleado o abonado del acueducto',
  `MONTO` decimal(10,2) NOT NULL,
  `DETALLE` varchar(100) NOT NULL,
  PRIMARY KEY (`ID_GASTO`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Volcando datos para la tabla asada.gastos: ~0 rows (aproximadamente)
DELETE FROM `gastos`;
/*!40000 ALTER TABLE `gastos` DISABLE KEYS */;
/*!40000 ALTER TABLE `gastos` ENABLE KEYS */;


-- Volcando estructura para tabla asada.inventario
CREATE TABLE IF NOT EXISTS `inventario` (
  `ID_ARTICULO` varchar(3) NOT NULL,
  `NOMBRE` varchar(70) DEFAULT NULL,
  `CANTIDAD_MIN` int(11) DEFAULT NULL,
  `CANTIDAD_MAX` int(11) DEFAULT NULL,
  `CANTIDAD` int(11) DEFAULT NULL,
  PRIMARY KEY (`ID_ARTICULO`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Valorar con Rodolfo si necestaran almacenar y estar actualizando esta tabla';

-- Volcando datos para la tabla asada.inventario: ~0 rows (aproximadamente)
DELETE FROM `inventario`;
/*!40000 ALTER TABLE `inventario` DISABLE KEYS */;
/*!40000 ALTER TABLE `inventario` ENABLE KEYS */;


-- Volcando estructura para tabla asada.lecturas
CREATE TABLE IF NOT EXISTS `lecturas` (
  `ID_LECTURAS` varchar(10) NOT NULL,
  `ID_PREVISTAS` varchar(4) NOT NULL,
  `FECHA` date NOT NULL,
  `LECTURA_ANTERIOR` float NOT NULL,
  `LECTURA_ACTUAL` float NOT NULL,
  `CONSUMO` float NOT NULL,
  PRIMARY KEY (`ID_LECTURAS`),
  KEY `FK_ID_PREVISTAS` (`ID_PREVISTAS`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Volcando datos para la tabla asada.lecturas: ~0 rows (aproximadamente)
DELETE FROM `lecturas`;
/*!40000 ALTER TABLE `lecturas` DISABLE KEYS */;
/*!40000 ALTER TABLE `lecturas` ENABLE KEYS */;


-- Volcando estructura para tabla asada.muestras_agua
CREATE TABLE IF NOT EXISTS `muestras_agua` (
  `ID_MUESTRA` varchar(4) NOT NULL,
  `FECHA` date NOT NULL,
  `RESPONSABLE` varchar(60) NOT NULL,
  `CALIFICACION` decimal(10,2) NOT NULL,
  PRIMARY KEY (`ID_MUESTRA`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Volcando datos para la tabla asada.muestras_agua: ~0 rows (aproximadamente)
DELETE FROM `muestras_agua`;
/*!40000 ALTER TABLE `muestras_agua` DISABLE KEYS */;
/*!40000 ALTER TABLE `muestras_agua` ENABLE KEYS */;


-- Volcando estructura para tabla asada.planillas
CREATE TABLE IF NOT EXISTS `planillas` (
  `ID_PLANILLA` varchar(4) NOT NULL,
  `ID_EMPLEADO` varchar(20) NOT NULL,
  `ID_POFESION` varchar(2) NOT NULL,
  `FECHA` date NOT NULL,
  `PRECIO_HREG` decimal(10,2) NOT NULL,
  `PRECIO_HEXT` decimal(10,2) NOT NULL,
  `HORAS_REG` int(11) NOT NULL,
  `HORAS_EXT` int(11) NOT NULL,
  `SALARIO` decimal(10,2) NOT NULL,
  PRIMARY KEY (`ID_PLANILLA`),
  KEY `FK_ID_PROFESION` (`ID_POFESION`),
  KEY `FK_ID_EMPLEADO` (`ID_EMPLEADO`),
  CONSTRAINT `FK_ID_EMPLEADO` FOREIGN KEY (`ID_EMPLEADO`) REFERENCES `empleados` (`ID_EMPLEADO`) ON UPDATE CASCADE,
  CONSTRAINT `FK_ID_PROFESION` FOREIGN KEY (`ID_POFESION`) REFERENCES `profesion` (`ID_PROF`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Volcando datos para la tabla asada.planillas: ~0 rows (aproximadamente)
DELETE FROM `planillas`;
/*!40000 ALTER TABLE `planillas` DISABLE KEYS */;
/*!40000 ALTER TABLE `planillas` ENABLE KEYS */;


-- Volcando estructura para tabla asada.prevista
CREATE TABLE IF NOT EXISTS `prevista` (
  `ID_PREVISTA` varchar(4) NOT NULL,
  `ID_TARIFAS` varchar(2) NOT NULL,
  `ID_ABONADO` varchar(20) NOT NULL,
  `ID_SECTOR` varchar(3) NOT NULL,
  `SALDO` float NOT NULL,
  `ESTADO` tinyint(1) NOT NULL,
  `TIPO_CEDULA` varchar(30) DEFAULT NULL,
  `UBICACION` varchar(255) NOT NULL,
  `OBSERVACIONES` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`ID_PREVISTA`),
  KEY `FK_ID_TARIFAS` (`ID_TARIFAS`),
  KEY `FK_ID_SECTOR` (`ID_SECTOR`),
  CONSTRAINT `FK_ID_SECTOR` FOREIGN KEY (`ID_SECTOR`) REFERENCES `sectores` (`ID_SECTOR`) ON UPDATE CASCADE,
  CONSTRAINT `FK_ID_TARIFAS` FOREIGN KEY (`ID_TARIFAS`) REFERENCES `tarifas` (`ID_TARIFAS`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Volcando datos para la tabla asada.prevista: ~2 rows (aproximadamente)
DELETE FROM `prevista`;
/*!40000 ALTER TABLE `prevista` DISABLE KEYS */;
INSERT INTO `prevista` (`ID_PREVISTA`, `ID_TARIFAS`, `ID_ABONADO`, `ID_SECTOR`, `SALDO`, `ESTADO`, `TIPO_CEDULA`, `UBICACION`, `OBSERVACIONES`) VALUES
	('1', '1', '05-0361-0263', '777', 75000, 1, 'Nacional', 'Quelin', 'ninguno'),
	('2', '2', '05-0361-0263', '001', 75000, 1, NULL, 'frfsfrgsdsdfg', NULL);
/*!40000 ALTER TABLE `prevista` ENABLE KEYS */;


-- Volcando estructura para tabla asada.profesion
CREATE TABLE IF NOT EXISTS `profesion` (
  `ID_PROF` varchar(2) NOT NULL,
  `PUESTO` varchar(255) DEFAULT NULL,
  `SAL_HR` float DEFAULT NULL,
  `SAL_FIJO` float DEFAULT NULL,
  PRIMARY KEY (`ID_PROF`),
  UNIQUE KEY `ID_PROF` (`ID_PROF`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Volcando datos para la tabla asada.profesion: ~0 rows (aproximadamente)
DELETE FROM `profesion`;
/*!40000 ALTER TABLE `profesion` DISABLE KEYS */;
INSERT INTO `profesion` (`ID_PROF`, `PUESTO`, `SAL_HR`, `SAL_FIJO`) VALUES
	('33', 'SOLDADOR', 333, 333);
/*!40000 ALTER TABLE `profesion` ENABLE KEYS */;


-- Volcando estructura para tabla asada.sectores
CREATE TABLE IF NOT EXISTS `sectores` (
  `ID_SECTOR` varchar(3) NOT NULL,
  `CONSECUTIVO` int(4) NOT NULL,
  `DESCRIPCION` varchar(255) NOT NULL,
  `VALOR` float DEFAULT NULL,
  PRIMARY KEY (`ID_SECTOR`),
  UNIQUE KEY `ID_SECTOR` (`ID_SECTOR`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Volcando datos para la tabla asada.sectores: ~2 rows (aproximadamente)
DELETE FROM `sectores`;
/*!40000 ALTER TABLE `sectores` DISABLE KEYS */;
INSERT INTO `sectores` (`ID_SECTOR`, `CONSECUTIVO`, `DESCRIPCION`, `VALOR`) VALUES
	('001', 2, 'COMUNIDAD DE BETANIA', 2000),
	('777', 7, 'AGUITA', 78);
/*!40000 ALTER TABLE `sectores` ENABLE KEYS */;


-- Volcando estructura para tabla asada.tarifas
CREATE TABLE IF NOT EXISTS `tarifas` (
  `ID_TARIFAS` varchar(2) NOT NULL,
  `MONTO_FIJO` decimal(10,2) NOT NULL,
  `MONTO_X_METRO` decimal(10,2) NOT NULL,
  `TARIFA_HIDRANTE` decimal(10,2) NOT NULL,
  `TIPO_APLICACION` tinyint(1) NOT NULL,
  PRIMARY KEY (`ID_TARIFAS`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Volcando datos para la tabla asada.tarifas: ~2 rows (aproximadamente)
DELETE FROM `tarifas`;
/*!40000 ALTER TABLE `tarifas` DISABLE KEYS */;
INSERT INTO `tarifas` (`ID_TARIFAS`, `MONTO_FIJO`, `MONTO_X_METRO`, `TARIFA_HIDRANTE`, `TIPO_APLICACION`) VALUES
	('1', 5600.00, 0.00, 310.00, 0),
	('2', 2300.00, 115.00, 15.00, 1);
/*!40000 ALTER TABLE `tarifas` ENABLE KEYS */;


-- Volcando estructura para tabla asada.venta_previstas
CREATE TABLE IF NOT EXISTS `venta_previstas` (
  `ID_VENTA` varchar(4) NOT NULL,
  `ID_PREVISTA` varchar(4) NOT NULL,
  `FECHA_VENTA` date NOT NULL,
  `MONTO_VENTA` decimal(10,2) NOT NULL,
  PRIMARY KEY (`ID_VENTA`),
  KEY `FK1_ID_PREVISTA` (`ID_PREVISTA`),
  CONSTRAINT `FK1_ID_PREVISTA` FOREIGN KEY (`ID_PREVISTA`) REFERENCES `prevista` (`ID_PREVISTA`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Volcando datos para la tabla asada.venta_previstas: ~0 rows (aproximadamente)
DELETE FROM `venta_previstas`;
/*!40000 ALTER TABLE `venta_previstas` DISABLE KEYS */;
/*!40000 ALTER TABLE `venta_previstas` ENABLE KEYS */;


-- Volcando estructura para vista asada.view_abonados
-- Creando tabla temporal para superar errores de dependencia de VIEW
CREATE TABLE `view_abonados` (
	`Cédula` VARCHAR(20) NOT NULL COLLATE 'utf8_general_ci',
	`Nombre` VARCHAR(45) NULL COLLATE 'utf8_general_ci',
	`Apellidos` VARCHAR(91) NULL COLLATE 'utf8_general_ci',
	`Móvil` VARCHAR(16) NULL COLLATE 'utf8_general_ci',
	`Teléfono` VARCHAR(16) NULL COLLATE 'utf8_general_ci',
	`Email` VARCHAR(65) NULL COLLATE 'utf8_general_ci',
	`Fecha de Registro` DATE NULL,
	`Dirección` VARCHAR(255) NULL COLLATE 'utf8_general_ci'
) ENGINE=MyISAM;


-- Volcando estructura para vista asada.view_buscador_abonados
-- Creando tabla temporal para superar errores de dependencia de VIEW
CREATE TABLE `view_buscador_abonados` (
	`ID_ABONADO` VARCHAR(20) NOT NULL COLLATE 'utf8_general_ci',
	`NOMBRE` VARCHAR(137) NULL COLLATE 'utf8_general_ci'
) ENGINE=MyISAM;


-- Volcando estructura para vista asada.view_buscador_empleados
-- Creando tabla temporal para superar errores de dependencia de VIEW
CREATE TABLE `view_buscador_empleados` (
	`ID_EMPLEADO` VARCHAR(20) NOT NULL COLLATE 'utf8_general_ci',
	`NOMBRE` VARCHAR(137) NOT NULL COLLATE 'utf8_general_ci'
) ENGINE=MyISAM;


-- Volcando estructura para vista asada.view_empleados
-- Creando tabla temporal para superar errores de dependencia de VIEW
CREATE TABLE `view_empleados` (
	`Cédula` VARCHAR(20) NOT NULL COLLATE 'utf8_general_ci',
	`Nombre` VARCHAR(137) NOT NULL COLLATE 'utf8_general_ci',
	`Fecha de Nacimiento` DATE NOT NULL,
	`Profesión` VARCHAR(255) NULL COLLATE 'utf8_general_ci',
	`Estado Civil` VARCHAR(15) NOT NULL COLLATE 'utf8_general_ci',
	`Teléfono` VARCHAR(16) NOT NULL COLLATE 'utf8_general_ci',
	`Dirección` VARCHAR(255) NOT NULL COLLATE 'utf8_general_ci'
) ENGINE=MyISAM;


-- Volcando estructura para vista asada.view_facturacion_cliente
-- Creando tabla temporal para superar errores de dependencia de VIEW
CREATE TABLE `view_facturacion_cliente` (
	`Nombre Cliente` VARCHAR(45) NULL COLLATE 'utf8_general_ci',
	`Apellidos` VARCHAR(91) NULL COLLATE 'utf8_general_ci',
	`DIRECCION` VARCHAR(255) NULL COLLATE 'utf8_general_ci',
	`FECHA_PAGO` DATE NULL,
	`Total cobro` DECIMAL(10,2) NOT NULL
) ENGINE=MyISAM;


-- Volcando estructura para vista asada.view_lecturas
-- Creando tabla temporal para superar errores de dependencia de VIEW
CREATE TABLE `view_lecturas` (
	`ID_LECTURAS` VARCHAR(10) NOT NULL COLLATE 'utf8_general_ci',
	`ID_PREVISTAS` VARCHAR(4) NOT NULL COLLATE 'utf8_general_ci',
	`FECHA` DATE NOT NULL,
	`LECTURA_ANTERIOR` FLOAT NOT NULL,
	`LECTURA_ACTUAL` FLOAT NOT NULL,
	`CONSUMO` FLOAT NOT NULL
) ENGINE=MyISAM;


-- Volcando estructura para vista asada.view_previstas
-- Creando tabla temporal para superar errores de dependencia de VIEW
CREATE TABLE `view_previstas` (
	`Código de Prevista` VARCHAR(4) NOT NULL COLLATE 'utf8_general_ci',
	`Cédula de Abonado` VARCHAR(20) NOT NULL COLLATE 'utf8_general_ci',
	`Nombre` VARCHAR(137) NULL COLLATE 'utf8_general_ci',
	`Código de Tarifa` VARCHAR(2) NOT NULL COLLATE 'utf8_general_ci',
	`Ubicación` VARCHAR(255) NOT NULL COLLATE 'utf8_general_ci',
	`Estado` TINYINT(1) NOT NULL
) ENGINE=MyISAM;


-- Volcando estructura para vista asada.view_profesiones
-- Creando tabla temporal para superar errores de dependencia de VIEW
CREATE TABLE `view_profesiones` (
	`Código de Profesión` VARCHAR(2) NOT NULL COLLATE 'utf8_general_ci',
	`Profesión` VARCHAR(255) NULL COLLATE 'utf8_general_ci'
) ENGINE=MyISAM;


-- Volcando estructura para vista asada.view_sectores
-- Creando tabla temporal para superar errores de dependencia de VIEW
CREATE TABLE `view_sectores` (
	`Código de Sector` VARCHAR(3) NOT NULL COLLATE 'utf8_general_ci',
	`Consecutivo` INT(4) NOT NULL,
	`Descripción` VARCHAR(255) NOT NULL COLLATE 'utf8_general_ci'
) ENGINE=MyISAM;


-- Volcando estructura para vista asada.view_tarifas
-- Creando tabla temporal para superar errores de dependencia de VIEW
CREATE TABLE `view_tarifas` (
	`Código de Tarifa` VARCHAR(2) NOT NULL COLLATE 'utf8_general_ci',
	`Monto Fijo` DECIMAL(10,2) NOT NULL,
	`Monto por Metro` DECIMAL(10,2) NOT NULL,
	`Tarifa de Hidrante` DECIMAL(10,2) NOT NULL,
	`Tipo de Cobro` VARCHAR(14) NOT NULL COLLATE 'utf8mb4_general_ci'
) ENGINE=MyISAM;


-- Volcando estructura para vista asada.vw_abonados
-- Creando tabla temporal para superar errores de dependencia de VIEW
CREATE TABLE `vw_abonados` (
	`Cédula` VARCHAR(20) NOT NULL COLLATE 'utf8_general_ci',
	`Nombre` VARCHAR(137) NULL COLLATE 'utf8_general_ci'
) ENGINE=MyISAM;


-- Volcando estructura para vista asada.vw_inventario_completo
-- Creando tabla temporal para superar errores de dependencia de VIEW
CREATE TABLE `vw_inventario_completo` (
	`Articulo` VARCHAR(70) NULL COLLATE 'utf8_general_ci',
	`Cantidad Minima` INT(11) NULL,
	`Existencias` INT(11) NULL
) ENGINE=MyISAM;


-- Volcando estructura para vista asada.vw_total_compras
-- Creando tabla temporal para superar errores de dependencia de VIEW
CREATE TABLE `vw_total_compras` (
	`Gran Total` DECIMAL(33,2) NULL,
	`Total de Productos` DECIMAL(32,2) NULL,
	`Total en Impuestos de Venta` DECIMAL(32,2) NULL
) ENGINE=MyISAM;


-- Volcando estructura para procedimiento asada.GENERAR_COBROS_AUTOMATICOS
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `GENERAR_COBROS_AUTOMATICOS`(IN `AUX_FECHA_COBRO` DATE, IN `AUX_PERIODO` VARCHAR(50))
    DETERMINISTIC
BEGIN
DECLARE FINISHED boolean default false;
DECLARE AUX_PREVISTA varchar(20) default null;
DECLARE AUX_TARIFA varchar(20) default null;
DECLARE AUX_HIDRANTES float default null;
DECLARE AUX_MONTO_FIJO float default null;
DECLARE AUX_RECIBO_PAGO varchar(45) default null;
DECLARE AUX_TOTAL int default 0;

DECLARE CUR1 cursor for select prv.ID_PREVISTA,tr.MONTO_FIJO,tr.HIDRANTES,tr.ID_TARIFAS from previstas as prv 
inner join tarifas as tr on tr.ID_TARIFAS=prv.ID_TARIFAS where prv.ESTADO=true and tr.TIPO_APLICACION=true;
DECLARE continue handler for not found set FINISHED = true;

OPEN CUR1;
CURLOOP: loop
fetch CUR1 into AUX_PREVISTA,AUX_MONTO_FIJO,AUX_HIDRANTES,AUX_TARIFA;
set AUX_TOTAL=AUX_MONTO_FIJO+AUX_HIDRANTES;
 
   if not FINISHED then 
	   if (select count(ID_COBROS) from cobros as cb where cb.ID_PREVISTA=AUX_PREVISTA and cb.PERIODO=AUX_PERIODO)=0 then
		  insert into cobros (ID_COBROS,ID_PREVISTA,ID_TARIFAS,FECHA_GENERACION,PERIODO,TIPO_GENERACION,METROS_CUBICOS,MONTO_FIJO,HIDRANTES,TOTAL) 
		  values (concat(AUX_PREVISTA,'-',AUX_PERIODO),AUX_PREVISTA,AUX_TARIFA,AUX_FECHA_COBRO,AUX_PERIODO,TRUE,0,AUX_MONTO_FIJO,AUX_HIDRANTES,AUX_TOTAL);
		end if; 
     else
       leave CURLOOP;
     end if;
end loop CURLOOP;
CLOSE CUR1;
END//
DELIMITER ;


-- Volcando estructura para procedimiento asada.GENERAR_COBROS_MANUALES
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `GENERAR_COBROS_MANUALES`(IN `AUX_FECHA_COBRO` DATE, IN `AUX_PERIODO` VARCHAR(50), IN `AUX_PREVISTA` VARCHAR(50))
    DETERMINISTIC
BEGIN
DECLARE AUX_METROS_CONSUMO float default null;
DECLARE AUX_MONTO_FIJO float default null;
DECLARE AUX_MONTO_X_METRO float default null;
DECLARE AUX_HIDRANTES float default null;
DECLARE AUX_ID_TARIFA varchar(20) default null;
DECLARE AUX_ID_lECTURA varchar(20) default null;

set AUX_MONTO_FIJO=(select tr.MONTO_FIJO from previstas as prv inner join tarifas as tr on tr.ID_TARIFAS=prv.ID_TARIFAS where tr.TIPO_APLICACION is false and prv.ESTADO is true and prv.ID_PREVISTA=AUX_PREVISTA);
set AUX_MONTO_X_METRO=(select tr.MONTO_X_METRO from previstas as prv inner join tarifas as tr on tr.ID_TARIFAS=prv.ID_TARIFAS where tr.TIPO_APLICACION is false and prv.ESTADO is true and prv.ID_PREVISTA=AUX_PREVISTA);
set AUX_HIDRANTES=(select tr.HIDRANTES from previstas as prv inner join tarifas as tr on tr.ID_TARIFAS=prv.ID_TARIFAS where tr.TIPO_APLICACION is false and prv.ESTADO is true and prv.ID_PREVISTA=AUX_PREVISTA);
set AUX_ID_LECTURA=(select lc.ID_LECTURAS from lecturas as lc inner join previstas as prv on lc.ID_PREVISTA=prv.ID_PREVISTA and prv.ESTADO is true and prv.ID_PREVISTA=AUX_PREVISTA);

if (select count(cb.ID_LECTURAS) from cobros as cb inner join lecturas as lc WHERE cb.ID_LECTURAS=lc.ID_LECTURAS)=0 then

set AUX_METROS_CONSUMO=(select lc.CONSUMO from lecturas as lc inner join previstas as prv on lc.ID_PREVISTA=prv.ID_PREVISTA and prv.ID_PREVISTA=AUX_PREVISTA);

set AUX_ID_TARIFA=(select prv.ID_TARIFAS from previstas as prv inner join tarifas as tr on tr.ID_TARIFAS=prv.ID_TARIFAS and prv.ID_PREVISTA=AUX_PREVISTA);

if (select count(prv.ID_PREVISTA) from previstas as prv inner join tarifas as tr on tr.ID_TARIFAS=prv.ID_TARIFAS where tr.TIPO_APLICACION is false and prv.ESTADO is true and prv.ID_PREVISTA=AUX_PREVISTA)>0 then
    
	 if (select count(ID_COBROS) from cobros as cb where cb.ID_PREVISTA=AUX_PREVISTA and PERIODO=AUX_PERIODO)=0 then
      insert into cobros (ID_COBROS,ID_PREVISTA,ID_LECTURAS,ID_SEDE,ID_TARIFAS,FECHA_GENERACION,PERIODO,TIPO_GENERACION,METROS_CUBICOS,MONTO_FIJO,HIDRANTES,TOTAL) 
		values (concat(AUX_PREVISTA,'-',AUX_PERIODO),AUX_PREVISTA,AUX_ID_LECTURA,AUX_SEDE,AUX_ID_TARIFA,AUX_FECHA_COBRO,AUX_PERIODO,FALSE,AUX_METROS_CONSUMO,AUX_MONTO_FIJO,AUX_HIDRANTES,(AUX_MONTO_FIJO+(AUX_HIDRANTES*AUX_METROS_CONSUMO)+(AUX_MONTO_X_METRO*AUX_METROS_CONSUMO)));
    	end if; 
	 end if;
  end if; 
END//
DELIMITER ;


-- Volcando estructura para función asada.NUEVO_ASOCIADO
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `NUEVO_ASOCIADO`(`AUX_ID_ABONADO` VARCHAR(20), `AUX_NOMBRE` VARCHAR(20), `AUX_APELLIDO1` VARCHAR(20), `AUX_APELLIDO2` VARCHAR(20), `AUX_CONTACTO` VARCHAR(45), `AUX_EMAIL` VARCHAR(60), `AUX_DIRECCION` VARCHAR(255)) RETURNS varchar(50) CHARSET utf8
    DETERMINISTIC
BEGIN

IF(SELECT COUNT(ab.ID_ABONADO) FROM abonados as ab where ab.ID_ABONADO = AUX_ID_ABONADO)=0 THEN 
	INSERT INTO abonados(ID_ABONADO,NOMBRE,APELLIDO1,APELLIDO2,CONTACTO,EMAIL,DIRECCION) VALUES(AUX_ID_ABONADO,AUX_NOMBRE,AUX_APELLIDO1,AUX_APELLIDO2,AUX_CONTACTO,AUX_EMAIL,AUX_DIRECCION);
		RETURN 'El nuevo usuario ha sido agregado correctamente!';
	ELSE 
		RETURN 'No se pudo agregar el usuario, ya existe uno con el numero de cedula digitado';
	END IF;
END//
DELIMITER ;


-- Volcando estructura para función asada.RETORNA_CONSEC_PREV
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `RETORNA_CONSEC_PREV`() RETURNS int(11)
    DETERMINISTIC
BEGIN
   RETURN (select empresa.CONSEC_PREVISTAS+1 from empresa); 
END//
DELIMITER ;


-- Volcando estructura para función asada.RETURN_CONSEC_PREV
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `RETURN_CONSEC_PREV`() RETURNS int(11)
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
	RETURN (select empresa.CONSEC_PREVISTAS+1 from empresa);
END//
DELIMITER ;


-- Volcando estructura para disparador asada.UPDATE_CONSEC_LECT
SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `UPDATE_CONSEC_LECT` AFTER INSERT ON `lecturas` FOR EACH ROW BEGIN
	update empresa set empresa.CONSEC_LECTURAS=new.ID_LECTURAS;
END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;


-- Volcando estructura para disparador asada.UPDATE_CONSEC_PREV
SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `UPDATE_CONSEC_PREV` AFTER INSERT ON `prevista` FOR EACH ROW BEGIN
update empresa set empresa.CONSEC_PREVISTAS=new.ID_PREVISTA;
END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;


-- Volcando estructura para vista asada.view_abonados
-- Eliminando tabla temporal y crear estructura final de VIEW
DROP TABLE IF EXISTS `view_abonados`;
CREATE ALGORITHM=MERGE DEFINER=`root`@`localhost` VIEW `view_abonados` AS select ab.ID_ABONADO as 'Cédula', ab.NOMBRE as 'Nombre', concat(ab.APELLIDO1,' ',ab.APELLIDO2) as 'Apellidos', ab.MOVIL as 'Móvil', 
ab.TELEFONO as 'Teléfono', ab.EMAIL as 'Email', ab.FECHA_REGISTRO as 'Fecha de Registro', ab.DIRECCION as 'Dirección' 

from abonados as ab ;


-- Volcando estructura para vista asada.view_buscador_abonados
-- Eliminando tabla temporal y crear estructura final de VIEW
DROP TABLE IF EXISTS `view_buscador_abonados`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` VIEW `view_buscador_abonados` AS select ab.ID_ABONADO as ID_ABONADO, concat(ab.APELLIDO1,' ',ab.APELLIDO2,' ',ab.NOMBRE) as NOMBRE
from abonados as ab
order by concat(ab.APELLIDO1,' ',ab.APELLIDO2,' ',ab.NOMBRE) ;


-- Volcando estructura para vista asada.view_buscador_empleados
-- Eliminando tabla temporal y crear estructura final de VIEW
DROP TABLE IF EXISTS `view_buscador_empleados`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` VIEW `view_buscador_empleados` AS select 
em.ID_EMPLEADO as ID_EMPLEADO,
concat(em.APELLIDO1,' ',em.APELLIDO2,' ',em.NOMBRE) as NOMBRE

from empleados as em
order by concat(em.APELLIDO1,' ',em.APELLIDO2,' ',em.NOMBRE) ;


-- Volcando estructura para vista asada.view_empleados
-- Eliminando tabla temporal y crear estructura final de VIEW
DROP TABLE IF EXISTS `view_empleados`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` VIEW `view_empleados` AS select emp.ID_EMPLEADO as 'Cédula',  concat(emp.APELLIDO1, ' ', emp.APELLIDO2,' ',emp.NOMBRE) as 'Nombre', 
emp.FECHA_NACIMIENTO as 'Fecha de Nacimiento', pro.PUESTO as 'Profesión', emp.ESTADO_CIVIL as 'Estado Civil', 
emp.TELEFONO as 'Teléfono', emp.DIRECCION as 'Dirección'
 
from empleados as emp
left join profesion as pro
on pro.ID_PROF = emp.ID_PROFESION ;


-- Volcando estructura para vista asada.view_facturacion_cliente
-- Eliminando tabla temporal y crear estructura final de VIEW
DROP TABLE IF EXISTS `view_facturacion_cliente`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` VIEW `view_facturacion_cliente` AS select `ab`.`NOMBRE` AS `Nombre Cliente`,concat(`ab`.`APELLIDO1`,' ',`ab`.`APELLIDO2`) AS `Apellidos`,`ab`.`DIRECCION` AS `DIRECCION`,`cb`.`FECHA_PAGO` AS `FECHA_PAGO`,`cb`.`TOTAL` AS `Total cobro` 
from ((`abonados` `ab` join `prevista` `pv` on((`pv`.`ID_ABONADO` = `ab`.`ID_ABONADO`))) join `cobros` `cb` on((`cb`.`ID_PREVISTA` = `pv`.`ID_PREVISTA`))) ;


-- Volcando estructura para vista asada.view_lecturas
-- Eliminando tabla temporal y crear estructura final de VIEW
DROP TABLE IF EXISTS `view_lecturas`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` VIEW `view_lecturas` AS select ID_LECTURAS, ID_PREVISTAS, FECHA, LECTURA_ANTERIOR, LECTURA_ACTUAL, CONSUMO 
 
from lecturas ;


-- Volcando estructura para vista asada.view_previstas
-- Eliminando tabla temporal y crear estructura final de VIEW
DROP TABLE IF EXISTS `view_previstas`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` VIEW `view_previstas` AS select  pr.ID_PREVISTA as 'Código de Prevista', pr.ID_ABONADO as 'Cédula de Abonado', concat(ab.APELLIDO1,' ', ab.APELLIDO2,' ',ab.NOMBRE) as 'Nombre',
pr.ID_TARIFAS as 'Código de Tarifa', pr.UBICACION as 'Ubicación', pr.ESTADO as 'Estado'  
 
from prevista as pr
left join abonados as ab 
on pr.ID_ABONADO = ab.ID_ABONADO ;


-- Volcando estructura para vista asada.view_profesiones
-- Eliminando tabla temporal y crear estructura final de VIEW
DROP TABLE IF EXISTS `view_profesiones`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` VIEW `view_profesiones` AS select pr.ID_PROF as 'Código de Profesión', pr.PUESTO as 'Profesión'
from profesion as pr ;


-- Volcando estructura para vista asada.view_sectores
-- Eliminando tabla temporal y crear estructura final de VIEW
DROP TABLE IF EXISTS `view_sectores`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` VIEW `view_sectores` AS select ID_SECTOR as 'Código de Sector', CONSECUTIVO as 'Consecutivo', DESCRIPCION as 'Descripción'
from sectores ;


-- Volcando estructura para vista asada.view_tarifas
-- Eliminando tabla temporal y crear estructura final de VIEW
DROP TABLE IF EXISTS `view_tarifas`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` VIEW `view_tarifas` AS select tr.ID_TARIFAS as 'Código de Tarifa', tr.MONTO_FIJO as 'Monto Fijo', tr.MONTO_X_METRO as 'Monto por Metro', 
tr.TARIFA_HIDRANTE as 'Tarifa de Hidrante', if(tr.TIPO_APLICACION=0,'Mensual Fija','Metros Cúbicos') as 'Tipo de Cobro'
from tarifas as tr ;


-- Volcando estructura para vista asada.vw_abonados
-- Eliminando tabla temporal y crear estructura final de VIEW
DROP TABLE IF EXISTS `vw_abonados`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` VIEW `vw_abonados` AS select ab.ID_ABONADO as 'Cédula', concat(ab.APELLIDO1,' ',ab.APELLIDO2,' ',ab.NOMBRE) as 'Nombre' 
from abonados as ab ;


-- Volcando estructura para vista asada.vw_inventario_completo
-- Eliminando tabla temporal y crear estructura final de VIEW
DROP TABLE IF EXISTS `vw_inventario_completo`;
CREATE ALGORITHM=UNDEFINED DEFINER=`admin`@`localhost` VIEW `vw_inventario_completo` AS select `iv`.`NOMBRE` AS `Articulo`,`iv`.`CANTIDAD_MIN` AS `Cantidad Minima`,`iv`.`CANTIDAD` AS `Existencias` from `inventario` `iv` 
 WITH CASCADED CHECK OPTION ;


-- Volcando estructura para vista asada.vw_total_compras
-- Eliminando tabla temporal y crear estructura final de VIEW
DROP TABLE IF EXISTS `vw_total_compras`;
CREATE ALGORITHM=UNDEFINED DEFINER=`admin`@`localhost` VIEW `vw_total_compras` AS select sum((`cm`.`TOTAL` + `cm`.`IVA`)) AS `Gran Total`,sum(`cm`.`TOTAL`) AS `Total de Productos`,sum(`cm`.`IVA`) AS `Total en Impuestos de Venta` from `compras` `cm` where ((`cm`.`FECHA_COMPRA` >= '2015-07-01') and (`cm`.`FECHA_COMPRA` <= '2015-07-30')) ;
/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IF(@OLD_FOREIGN_KEY_CHECKS IS NULL, 1, @OLD_FOREIGN_KEY_CHECKS) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
